import homero.*
import wollok.game.*
import comida.*

describe "homero" {
  // TODO: Hay que testear funcionalidad interesante, lógica del juego.
  test "Homero inicia con 0 puntos" {
    assert.that(homero.puntos()==0)
  }

  // TODO: Si quieren chequear igualdad, deben usar .equals
  test "Homero inicia con velocidad 2" {
    assert.that(homero.velocidad()==2)
  }

  test "Homero inicia en la posicion x=8, y=0" {
    assert.that(homero.position().x()==8)
    assert.that(homero.position().y()==0)
  }

  test "Homero se mueve a la izquierda" {
    homero.moverseIzquierda()
    assert.that(homero.position().x()==6)
  }

  test "Homero se mueve a la derecha" {
    homero.moverseDerecha()
    assert.that(homero.position().x()==10)
  }

  test "Homero no se mueve a la izquierda si esta en el borde" {
    homero.position().goLeft(8)
    homero.moverseIzquierda()
    assert.that(homero.position().x()==0)
  }

  test "Homero no se mueve a la derecha si esta en el borde" {
    homero.position().goRight(8)
    homero.moverseDerecha()
    assert.that(homero.position().x()==16)
  }

  test "Homero altera sus puntos" {
    homero.alterarPuntos(5)
    assert.that(homero.puntos()==5)
  }

  test "Homero no puede tener puntos negativos" {
    homero.alterarPuntos(-5)
    assert.that(homero.puntos()==0)
  }

  test "Homero altera su velocidad" {
    homero.alterarVelocidad(5)
    assert.that(homero.velocidad()==7)
  }

  test "Homero no puede tener velocidad menor a 2" {
    homero.alterarVelocidad(-5)
    assert.that(homero.velocidad()==2)
  }
  // TODO: No se testean setters!!!


  // TODO: tests de los distintos comportamientos de las comidas
  //  (o sea que la velocidad y los puntos se aumenten correctamente)
  // TODO: test que se mueve correctamente de acuerdo a la velocidad (la cantidad de casillas)
  // TODO: tests de distintos casos de movimientos (por ejemplo que no salga de la pantalla)
  // Pensar los casos de tests que yo quiero probar. (escribir con texto)
  // Elijan algún conjunto lindo y cerrado para testear.
}